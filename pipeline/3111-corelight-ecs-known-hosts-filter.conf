# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

filter {
  if [@metadata][z_no_reuse][event_type] == "corelight" and [@metadata][z_no_reuse][event_sub_type] == "known-hosts" {

    mutate {
      update => {
        "[@metadata][temporary_metadata_index_name_suffix]" => "various"
        "[event][category]" => "observations"
      }
      rename => {
        "conns_closed" => "[corelight][known][conns_closed]"
        "conns_opened" => "[corelight][known][conns_opened]"
        "conns_pending" => "[corelight][known][conns_pending]"
        "duration" => "[event][duration]"
        "host_type" => "[corelight][known][host_type]"
        "kuid" => "[log][id][kuid]"
        "last_active_interval" => "[corelight][known][last_active_interval]"
        "last_active_session" => "[log][id][last_active_session]"
        "long_conns" => "[corelight][known][long_conns]"
      }
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-mutate-71edc96634c2-main-known-hosts-20221028.01"
      }
      tag_on_failure => "_mutate_error-71edc96634c2"
      id => "filter-mutate-71edc96634c2"
    }
    
    if ![host_ip] {
      mutate {
        rename => {
          "temp_host" => "[host][ip]"
        }
      }
    }
    # renaming temp_host which would go to [labels][corelight][logstash_input_host_listening_ip] is done in 8980-corelight-ecs-final_cleanups-filter.conf
    else {
      mutate {
        rename => {
          "host_ip" => "[host][ip]"
        }
      }
    }

    # Event duration
    if [event][duration] {
      ruby {
        code => '
          event_duration = event.get("[event][duration]")
          duration = event_duration.to_f * 1000000000
          event.set("[event][duration]", duration)
        '
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-ruby-ac0757f13ae8-20220713.01"
        }
        tag_on_exception => "_rubyexception-ac0757f13ae8-event.duration_to_nanoseconds-20220713.01"
        id => "filter-ruby-ac0757f13ae8"
      }
    }
    
    # Remove blank/empty [log][id][last_active_session] field
    if [log][id][last_active_session] == "" {
      mutate {
        remove_field => [
          "[log][id][last_active_session]"
        ]
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-mutate-e7630acb5d49-20220721.01"
        }
        tag_on_failure => "_remove_error-e7630acb5d49"
        id => "filter-mutate-e7630acb5d49"
      }
    }

  }
}
