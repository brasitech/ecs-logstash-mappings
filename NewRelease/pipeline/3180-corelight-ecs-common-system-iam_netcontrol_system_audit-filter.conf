# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

# Common pipeline for System logs (system, iam, and netcontrol logs).
filter {
  if [@metadata][z_no_reuse][event_type] == "corelight" and [labels][corelight][event_sub_type] in [ "audit", "auditlog", "broker", "cluster", "config", "corelight_audit_log", "corelight_license_capacity", "loaded_scripts", "netcontrol", "netcontrol_drop", "netcontrol_shunt", "openflow" ] {
    mutate {
      update => {
        "[@metadata][temporary_metadata_is_protocol_log]" => "no"
        "[event][kind]" => "event"
        "[event][category]" => "system"
        "[event][type]" => "info"
        "[labels][corelight][event_category]" => "diagnostics"
        "[@metadata][temporary_metadata_index_name_type]" => "VAR_CL_DS_TYPE_SYSTEM_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_prefix]" => "VAR_CL_DS_PREFIX_SYSTEM_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_suffix]" => "VAR_CL_DS_SUFFIX_SYSTEM_LOG"
        "[@metadata][temporary_metadata_index_name_namespace]" => "VAR_CL_DS_NAMESPACE_SYSTEM_LOG"
      }
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-mutate-d3d4da548b85-2023120101"
      }
      tag_on_failure => "_mutate_error-d3d4da548b85"
      id => "filter-mutate-d3d4da548b85"
    }
    # Remove infinite dotted fields and replace with underscore
    ruby {
      code => '
        # Set keys/fields to delete
        keys_to_del = []

        # Get the original event
        orig_event = event.to_hash

        # Find each field with a "." then replace it and then mark the original field name for deletion
        orig_event.keys.each { |k| orig_event[k.gsub(".", "_")] = orig_event[k]; keys_to_del << k if k.include?(".") }

        # Delete the original fields that contained the "."
        keys_to_del.each { |field_to_del| orig_event.delete(field_to_del) }

        # Replace/overwrite event
        event.overwrite(LogStash::Event.new(orig_event))
      '
      tag_on_exception => "_rubyexception-740243c70583-system-remove_dots-2023120101"
      tag_with_exception_message => true
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-ruby-740243c70583-2023120101"
      }
      id => "filter-ruby-740243c70583"
    }
    
    # Set a few different [event][category] that are iam
    if [labels][corelight][event_sub_type] in [ "audit", "auditlog", "corelight_audit_log" ] {
      mutate {
        update => {
          "[event][category]" => [ "system", "iam" ]
        }
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-mutate-2bcd1546dd22-2023120101"
        }
        tag_on_failure => "_mutate_error-2bcd1546dd22"
        id => "filter-mutate-2bcd1546dd22"
      }    
    }

    # Set netcontrol [labels][corelight][event_sub_type]
    if [labels][corelight][event_sub_type] in [ "netcontrol", "netcontrol_drop", "netcontrol_shunt", "openflow" ] {
      mutate {
        update => {
          "[labels][corelight][event_category]" => "netcontrol"
        }
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-mutate-896e9ed2d31d-2023120101"
        }
        tag_on_failure => "_mutate_error-896e9ed2d31d"
        id => "filter-mutate-896e9ed2d31d"
      }
    }

  }
}
