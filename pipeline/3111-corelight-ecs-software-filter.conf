# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

filter {
  if [@metadata][z_no_reuse][event_type] == "corelight" and ( [labels][corelight][event_sub_type] == "software" or [labels][corelight][event_sub_type] == "software_red" ) {

    mutate {
      update => {
        "[event][kind]" => "event"
        "[event][category]" => [ "network", "package" ]
        "[event][type]" => "info"
        "[labels][corelight][event_category]" => "network_observations"
        "[@metadata][temporary_metadata_index_name_type]" => "VAR_CL_DS_TYPE_PROTOCOL_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_prefix]" => "VAR_CL_DS_PREFIX_PROTOCOL_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_suffix]" => "VAR_CL_DS_SUFFIX_PROTOCOL_LOG_VARIOUS"
        "[@metadata][temporary_metadata_index_name_namespace]" => "VAR_CL_DS_NAMESPACE_PROTOCOL_LOG"
      }
      rename => {
        "temp_host" => "[software][ip]"
        "host_p" => "[software][port]"
        "name" => "[software][name]"
        "temp_port" => "[software][port]"
        "software_type" =>  "[software][type]"
        "unparsed_version" => "[software][original]"
        "url" => "[url][original]"
        "version.addl" => "[software][additional_info]"
        "version.major" => "[software][version][major]"
        "version.minor" => "[software][version][minor]"
        "version.minor2" => "[software][version][minor2]"
        "version.minor3" => "[software][version][minor3]"
        "version_addl" => "[software][additional_info]"
        "version_major" => "[software][version][major]"
        "version_minor" => "[software][version][minor]"
        "version_minor2" => "[software][version][minor2]"
        "version_minor3" => "[software][version][minor3]"
        "[version][addl]" => "[software][additional_info]"
        "[version][major]" => "[software][version][major]"
        "[version][minor]" => "[software][version][minor]"
        "[version][minor2]" => "[software][version][minor2]"
        "[version][minor3]" => "[software][version][minor3]"
      }
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-mutate-cde84a2ba3dd-2024011501"
      }
      copy => {
        "[software][ip]" => "[host][ip]"
        "[software][port]" => "[host][port]"
      }
      tag_on_failure => "_mutate_error-cde84a2ba3dd"
      id => "filter-mutate-cde84a2ba3dd"
    }

    # Check if version is empty object/dictionary
    if [version] {
      ruby {
        code => '
          if event.get("version").is_a?(Hash) && event.get("version").empty?
            event.remove("version")
          end
        '
        tag_on_exception => "_rubyexception-d43a41c879cf"
        tag_with_exception_message => true
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-ruby-d43a41c879cf-2024011501"
        }
        id => "filter-ruby-d43a41c879cf"
      }
    }
  
  }
}
