# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

filter {
  if [@metadata][z_no_reuse][event_type] == "corelight" {
    # catch any critical parse/log failures that would cause drastic issues like event collisions or field explosions and so on - this is not typical just to logstash. These are things that should be done in any ETL for any database.
    if "parse-failure-critical" in [tags] {
      # datastream
      if [@metadata][temporary_metadata_index_strategy] == "datastream" {
        mutate {
          update => {
            "[@metadata][temporary_metadata_index_name_prefix]" => "parse-failures-corelight-ds"
          }
          add_field => {
            "[@metadata][etl][pipeline]" => "filter-mutate-eeb4d3300c77-20220414.01"
          }
          tag_on_failure => "_mutate_error-eeb4d3300c77"
          id => "filter-mutate-eeb4d3300c77"
        }
      }
      # index
      else {
        mutate {
          update => {
              "[@metadata][temporary_metadata_index_name_prefix]" => "parse-failures"
              "[@metadata][temporary_metadata_index_name_suffix]" => "corelight"
          }
          add_field => {
            "[@metadata][etl][pipeline]" => "filter-mutate-5d6176d71a05-20220414.01"
          }
          tag_on_failure => "_mutate_error-5d6176d71a05"
          id => "filter-mutate-5d6176d71a05"
        }
      }
    }
    # catch other critical parse/log failures that would cause drastic issues like event collisions or field explosions and so on - this is not typical just to logstash. These are things that should be done in any ETL for any database.
    else if ![event][dataset] {
      # datastream
      if [@metadata][temporary_metadata_index_strategy] == "datastream" {
        mutate {
          update => {
            "[@metadata][temporary_metadata_index_name_prefix]" => "parse-failures-corelight-ds"
          }
          add_field => {
            "[@metadata][etl][pipeline]" => "filter-mutate-6d6d235c57f4-20220414.01"
          }
          tag_on_failure => "_mutate_error-6d6d235c57f4"
          id => "filter-mutate-6d6d235c57f4"
        }
      }
      else {
        mutate {
          update => {
              "[@metadata][temporary_metadata_index_name_prefix]" => "parse-failures"
              "[@metadata][temporary_metadata_index_name_suffix]" => "corelight"
          }
          add_tag => [ "corelight-ecs-logstash-pipeline-error: missing [event][dataset]"]
          add_field => {
            "[@metadata][etl][pipeline]" => "filter-mutate-9d53b5610455-20220414.01"
          }
          tag_on_failure => "_mutate_error-9d53b5610455"
          id => "filter-mutate-9d53b5610455"
        }
      }
    }
  }
  # Catch other denoted critical parse failure
  else if [@metadata][z_no_reuse][event_type] == "corelight-parse-failure" {
    # datastream
    if [@metadata][temporary_metadata_index_strategy] == "datastream" {
      mutate {
        update => {
          "[@metadata][temporary_metadata_index_name_prefix]" => "parse-failures-corelight-ds"
        }
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-mutate-11243b4683f1-20220414.01"
        }
        tag_on_failure => "_mutate_error-11243b4683f1"
        id => "filter-mutate-11243b4683f1"
      }
    }
    else {
      mutate {
        update => {
            "[@metadata][temporary_metadata_index_name_prefix]" => "parse-failures"
            "[@metadata][temporary_metadata_index_name_suffix]" => "corelight"
        }
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-mutate-1ae0da7227c8-20220414.01"
        }
        tag_on_failure => "_mutate_error-1ae0da7227c8"
        id => "filter-mutate-1ae0da7227c8"
      }    
    }
  }
  # Finalize datastream
  if [@metadata][temporary_metadata_index_strategy] == "datastream" {
    mutate {
      # [data_stream][type] is already set.
      copy => {
        "[@metadata][temporary_metadata_index_name_prefix]" => "[data_stream][dataset]"
        "[@metadata][temporary_metadata_index_name_suffix]" => "[data_stream][namespace]"
      }
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-mutate-2d266a2b2159-20220414.01"
      }
      tag_on_failure => "_mutate_error-2d266a2b2159"
      id => "filter-mutate-2d266a2b2159"
    }
  }
}
