# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

filter {

  if [tls][client][issuer] {
    ruby {
      code => '
        retrieved_evt_val = event.get("[tls][client][issuer]")
       
        if !defined?(retrieved_evt_val).nil? && !retrieved_evt_val.nil? && !(retrieved_evt_val.respond_to?(:empty?) && !!retrieved_evt_val.empty?)
          # Length of value
          retrieved_evt_val_length = retrieved_evt_val.length
          # Non ASCII in value
          retrieved_evt_val_has_non_ascii = !retrieved_evt_val.ascii_only?

          # Count the number of attributes based on the common seperated "="
          retrieved_evt_val_attribute_amt = retrieved_evt_val.count"="
          
          # Set event parameters
          event.set("[tls][client][issuer_length]", retrieved_evt_val_length)
          event.set("[tls][client][issuer_has_non_ascii]", retrieved_evt_val_has_non_ascii)
          event.set("[tls][client][issuer_attribute_amt]", retrieved_evt_val_attribute_amt)
        end
      '
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-ruby-1b547a693b98-2023120101"
      }
      tag_on_exception => "_rubyexception-1b547a693b98-2023120101"
      id => "filter-ruby-1b547a693b98"
    }
  }
  
  if [tls][client][subject] {
    ruby {
      code => '
        retrieved_evt_val = event.get("[tls][client][subject]")
       
        if !defined?(retrieved_evt_val).nil? && !retrieved_evt_val.nil? && !(retrieved_evt_val.respond_to?(:empty?) && !!retrieved_evt_val.empty?)
          # Length of value
          retrieved_evt_val_length = retrieved_evt_val.length
          # Non ASCII in value
          retrieved_evt_val_has_non_ascii = !retrieved_evt_val.ascii_only?

          # Count the number of attributes based on the common seperated "="
          retrieved_evt_val_attribute_amt = retrieved_evt_val.count"="
          
          # Set event parameters
          event.set("[tls][client][subject_length]", retrieved_evt_val_length)
          event.set("[tls][client][subject_has_non_ascii]", retrieved_evt_val_has_non_ascii)
          event.set("[tls][client][subject_attribute_amt]", retrieved_evt_val_attribute_amt)
        end
      '
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-ruby-5ac45d01bbd1-2023120101"
      }
      tag_on_exception => "_rubyexception-5ac45d01bbd1-2023120101"
      tag_with_exception_message => true
      id => "filter-ruby-5ac45d01bbd1"
    }
  }

}
