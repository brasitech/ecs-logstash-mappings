# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

filter {
  if [@metadata][z_no_reuse][event_type] == "corelight" {
  
    # 1. catch any potentials to cause field name issues
    # 2. set final output parameters for index naming / index strategy
    # 3. anything else
    
    # 1a.Catch any critical parse/log failures that would cause drastic issues like event collisions or field explosions and so on - this is not typical just to logstash. These are things that should be done in any ETL for any database.
    if "parse_failure_critical" in [tags] or ![event][dataset] or [@metadata][z_no_reuse][event_type] == "parse_failure-corelight" {
      mutate {
        update => {
          "[@metadata][temporary_metadata_index_name_type]" => "VAR_CORELIGHT_INDEX_NAME_TYPE_PARSE_FAILURES"
          "[@metadata][temporary_metadata_index_name_dataset_prefix]" => "VAR_CORELIGHT_INDEX_DATASET_PREFIX_PARSE_FAILURES"
          "[@metadata][temporary_metadata_index_name_dataset_suffix]" => "VAR_CORELIGHT_INDEX_DATASET_SUFFIX_PARSE_FAILURES"
          "[@metadata][temporary_metadata_index_name_namespace]" => "VAR_CORELIGHT_INDEX_NAMESPACE_PARSE_FAILURES"
        }
        add_field => {
          "[labels][etl][pipeline]" => "filter-mutate-c784765581e6-2023101701"
        }
        tag_on_failure => "_mutate_error-cb3795a40972"
        id => "filter-mutate-cb3795a40972"
      }
    }

    # 2. Set data_stream fields
    if [@metadata][temporary_metadata_index_strategy] == "datastream" {
      mutate {
        replace => {
          "[data_stream][type]" => "%{[@metadata][temporary_metadata_index_name_type]}"
          "[data_stream][dataset]" => "%{[@metadata][temporary_metadata_index_name_type]}"
        }
        add_field => {
          "[labels][etl][pipeline]" => "filter-mutate-c92584df56e4-2023101701"
        }
        tag_on_failure => "_mutate_error-c92584df56e4"
        id => "filter-mutate-c92584df56e4"
      }
      # Set [data_stream][namespace] # if already set assume user wants to set namespace (ie: for multiple customers to differentiate) else can use custom_temporary_metadata_index_name_namespace
      if ![data_stream][namespace] {
        mutate {
          add_field => {
            "[data_stream][namespace]" => "%{[@metadata][temporary_metadata_index_name_namespace]}"
            "[labels][etl][pipeline]" => "filter-mutate-b688e8bfa13c-2023101701"
          }
          tag_on_failure => "_mutate_error-b688e8bfa13c"
          id => "filter-mutate-b688e8bfa13c"
        }
      }
    }

    # 3. Anything else
    if [@metadata][custom_temporary_metadata_index_name_namespace] {
      mutate {
        replace => {
          "[@metadata][temporary_metadata_index_name_namespace]" => "%{[@metadata][custom_temporary_metadata_index_name_namespace]}"
        }
        update => {
          "[data_stream][namespace]" => "%{[@metadata][custom_temporary_metadata_index_name_namespace]}"
        }
        add_field => {
          "[labels][etl][pipeline]" => "filter-mutate-bc909435d7f6-2023101701"
        }
        tag_on_failure => "_mutate_error-bc909435d7f6"
        id => "filter-mutate-bc909435d7f6"
      }
    }



  }
}
