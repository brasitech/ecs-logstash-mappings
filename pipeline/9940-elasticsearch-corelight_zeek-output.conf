# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

output {
  if [@metadata][z_no_reuse][event_type] == "corelight" {

    # Protocol Logs and Pipeline Errors and Metrics and Non Protocol Logs (Metric and System)
    elasticsearch {
      ######## Elasticsearch Hosts ########
      hosts => [ "${LS_OUTPUT_ES_HOSTS}" ]

      ######## Authentication ########
      #### user/password
      #user => "${LS_OUTPUT_ES_USER}"
      #password => "${LS_OUTPUT_ES_PASSWORD}"
      #### api key
      # Authenticate using Elasticsearch API key. Note that this option also requires SSL/TLS, which can be enabled by supplying a cloud_id, a list of HTTPS hosts, or by setting ssl_enabled => true. Format is id:api_key where id and api_key are as returned by the Elasticsearch
      #api_key => ""${LS_OUTPUT_ES_API_KEY}""
      #### cloud auth
      #cloud_auth => ""${LS_OUTPUT_ES_CLOUD_AUTH}""

      ######## SSL ########
      #### Enable SSL/TLS
      #ssl_enabled => ${LS_OUTPUT_ES_SSL_ENABLED} # boolean # Enable SSL/TLS secured communication to Elasticsearch cluster
      #### SSL Certificate Authorities
      #ssl_certificate_authorities => [ ${LS_OUTPUT_ES_SSL_CERTIFICATE_AUTHORITIES} ] # list # The .cer or .pem files to validate the server’s certificate.
      #### SSL Verification Mode
      #ssl_verification_mode => "${LS_OUTPUT_ES_SSL_VERIFICATION_MODE}" # string # Defines how to verify the certificates presented by another party in the TLS connection: full validates that the server certificate has an issue date that’s within the not_before and not_after dates; chains to a trusted Certificate Authority (CA), and has a hostname or IP address that matches the names within the certificate. none performs no certificate validation
      #### Client Certificate
      #ssl_certificate => "${LS_OUTPUT_ES_SSL_CERTIFICATE}" # string # SSL certificate to use to authenticate the client.
      #ssl_key => "${LS_OUTPUT_ES_SSL_KEY}" # string # OpenSSL-style RSA private key that corresponds to the ssl_certificate. This setting can be used only if ssl_certificate is set.
      #### Keystore
      #ssl_keystore_password => "${LS_OUTPUT_ES_SSL_KEYSTORE_PASSWORD}" # string # Set the keystore password
      #ssl_keystore_path => "${LS_OUTPUT_ES_SSL_KEYSTORE_PATH}" # string # The keystore used to present a certificate to the server. It can be either .jks or .p12
      #ssl_keystore_type => "${LS_OUTPUT_ES_SSL_KEYSTORE_TYPE}" # string # The format of the keystore file. It must be either jks or pkcs12.
      #### Truststore
      #ssl_truststore_password => "${LS_OUTPUT_ES_SSL_TRUSTSTORE_PASSWORD}" # string # Set the truststore password
      #ssl_truststore_path => "${LS_OUTPUT_ES_SSL_TRUSTSTORE_PATH}" # string # The truststore to validate the server’s certificate. It can be either .jks or .p12.
      #ssl_truststore_type => "${LS_OUTPUT_ES_SSL_TRUSTSTORE_TYPE}" # string # The format of the truststore file. It must be either jks or pkcs12.
      #### Uncommon SSL Options
      #ca_trusted_fingerprint => "${LS_OUTPUT_ES_SSL_CA_TRUST_FINGERPRINT}" #"" # string # The SHA-256 fingerprint of an SSL Certificate Authority to trust, such as the autogenerated self-signed CA for an Elasticsearch cluster. Requires Logstash => 8.3
      #ssl_cipher_suites => [ "${LS_OUTPUT_ES_SSL_CIPHER_SUITES}" ] # list # The list of cipher suites to use, listed by priorities.
      #ssl_supported_protocols => "${LS_OUTPUT_ES_SSL_SUPPORTED_PROTOCOLS}" # list # List of allowed SSL/TLS versions to use when establishing a connection to the Elasticsearch cluster

      ################ Required fields, do not modify these ################
      ######## Datastream ########
      # Use data streams via data stream auto_routing, supported only in logstash => 7.13
      data_stream => "true"
      data_stream_auto_routing => "true"
      data_stream_sync_fields => "true"

      ######## Compression ########
      http_compression => true #default: false # Enable gzip compression on requests. This setting allows you to reduce this plugin’s outbound network traffic by compressing each bulk request to Elasticsearch

      ######## Index ########
      #manage_template => false
      #index => "[@metadata][temporary_metadata_index_name_type]-%{[@metadata][temporary_metadata_index_name_dataset_prefix]}.%{[@metadata][temporary_metadata_index_name_dataset_suffix]}-%{[@metadata][temporary_metadata_index_name_namespace]}"
      #action => "create"
      ################ END Required fields, do not modify these ################

      id => "output-elasticsearch-60b217ebe2ac"
    }

  }
}
