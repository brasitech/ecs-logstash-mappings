# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

filter {
  if [@metadata][z_no_reuse][event_type] == "corelight" and [labels][corelight][event_sub_type] == "radius" {

    mutate {
      update => {
        "[event][kind]" => "event"
        "[event][category]" => "network"
        "[event][type]" => [ "connection", "info", "protocol" ]
        "[labels][corelight][event_category]" => "network_protocols"
        "[@metadata][temporary_metadata_index_name_type]" => "VAR_CL_DS_TYPE_PROTOCOL_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_prefix]" => "VAR_CL_DS_PREFIX_PROTOCOL_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_suffix]" => "VAR_CL_DS_SUFFIX_PROTOCOL_LOG_VARIOUS"
        "[@metadata][temporary_metadata_index_name_namespace]" => "VAR_CL_DS_NAMESPACE_PROTOCOL_LOG"
      }
      rename => {
        "connect_info" => "[radius][connect_info]"
        "framed_addr" => "[radius][framed][ip]"
        "mac" => "[source][mac]"
        "reply_msg" => "[radius][reply_message]"
        "result" => "[radius][result]"
        "success" => "[radius][success]"
        "ttl" => "[event][duration]"
        "tunnel_client" => "[radius][tunnel][source][endpoint]"
        "username" => "[source][user][name]"
      }
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-mutate-e8d69baf8471-2023120101"
      }
      tag_on_failure => "_mutate_error-e8d69baf8471"
      id => "filter-mutate-e8d69baf8471"
    }

    # Event outcome
    if [radius][success] in [ true, false ] {
      translate {
        field => "[radius][success]"
        exact => true
        dictionary => [
          "true", "success",
          "false", "failure"
        ]
        destination => "[event][outcome]"
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-translate-dd6a078e64f4-2023120101"
        }
        id => "filter-translate-dd6a078e64f4"
      }
    }
    
    # Event duration
    ruby {
      code => '
        event_duration = event.get("[event][duration]")
        duration = event_duration.to_f * 1000000000
        event.set("[event][duration]", duration)
      '
      add_field =>  {
        "[@metadata][etl][pipeline]" => "filter-ruby-4c1f6e9707e9-2023120101"
      }
      tag_on_exception => "_rubyexception-4c1f6e9707e9-event.duration_to_nanoseconds-2023120101"
        tag_with_exception_message => true
      id => "filter-ruby-4c1f6e9707e9"
    }

  }
}
