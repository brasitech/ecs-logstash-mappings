# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

# General pipeline for configurations common amongst all Corelight/Zeek data/log types
filter {
  if [@metadata][z_no_reuse][event_type] == "corelight" and [event][dataset] in [ "capture_loss", "corelight_cloud_stats", "corelight_overall_capture_loss", "corelight_profiling", "corelight_weird_stats", "namecache", "packet_filter", "reporter", "stats", "suricata_stats", "weird_stats" ] {
    mutate {
      update => {
        "[@metadata][temporary_metadata_index_name_prefix]" => "zeek-corelight"
        "[@metadata][temporary_metadata_index_name_suffix]" => "stats-%{[event][dataset]}"
        "[event][category]" => "diagnostics"
      }
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-mutate-b0dd2bf62030-main-stats-20220310.01"
      }
      tag_on_failure => "_mutate_error-b0dd2bf62030"
      id => "filter-mutate-b0dd2bf62030"
    }
    if [@metadata][temporary_metadata_index_strategy] == "datastream" {
      mutate {
        update => {
          "[data_stream][type]" => "metrics"
          "[@metadata][temporary_metadata_index_name_prefix]" => "zeek-corelight-ds"
        }
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-mutate-cdaca3ae094f-20220310.01"
        }
        tag_on_failure => "_mutate_error-cdaca3ae094f"
        id => "filter-mutate-cdaca3ae094f"
      }
    }
    # Remove infinite dotted fields and replace with underscore
    ruby {
      code => '
        # Set keys/fields to delete
        keys_to_del = []

        # Get the original event
        orig_event = event.to_hash

        # Find each field with a "." then replace it and then mark the original field name for deletion
        orig_event.keys.each { |k| orig_event[k.gsub(".", "_")] = orig_event[k]; keys_to_del << k if k.include?(".") }

        # Delete the original fields that contained the "."
        keys_to_del.each { |field_to_del| orig_event.delete(field_to_del) }

        # Replace/overwrite event
        event.overwrite(LogStash::Event.new(orig_event))
      '
      tag_on_exception => "_rubyexception-7fdd621d78fd-stats-remove_dots-20220429.01"
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-ruby-7fdd621d78fd-20220429.01"
      }
      id => "filter-ruby-7fdd621d78fd"
    }

  }
}
