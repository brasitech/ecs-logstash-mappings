# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

filter {
  if [@metadata][z_no_reuse][event_type] == "corelight" and [labels][corelight][event_sub_type] == "dhcp" {

    mutate {
      update => {
        "[event][kind]" => "event"
        "[event][category]" => "network"
        "[event][type]" => [ "connection", "info", "protocol" ]
        "[labels][corelight][event_category]" => "network_protocols"
        "[@metadata][temporary_metadata_index_name_type]" => "VAR_CL_DS_TYPE_PROTOCOL_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_prefix]" => "VAR_CL_DS_PREFIX_PROTOCOL_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_suffix]" => "VAR_CL_DS_SUFFIX_PROTOCOL_LOG_VARIOUS"
        "[@metadata][temporary_metadata_index_name_namespace]" => "VAR_CL_DS_NAMESPACE_PROTOCOL_LOG"
      }
      rename => {
        "assigned_addr" => "[dhcp][assigned_addr]"
        "agent_remote_id" => "[dhcp][agent_remote_id]"
        "circuit_id" => "[dhcp][circuit_id]"
        "client_addr" => "[source][ip]"
        "client_fqdn" => "[source][fqdn]"
        "client_software" => "[source][software][original]"
        "domain" => "[source][domain]"
        "duration" => "[event][duration]"
        "host_name" => "[source][hostname]"
        "lease_time" => "[dhcp][lease_time]"
        "mac" => "[source][mac]"
        "msg_orig" => "[dhcp][msg_orig]"
        "msg_types" => "[dhcp][msg_types]"
        "requested_addr" => "[dhcp][requested_addr]"
        "server_addr" => "[destination][ip]"
        "server_message" => "[dhcp][server_message]"
        "subscriber_id" => "[dhcp][subscriber_id]"
      }
      replace => {
        "[destination][port]" => "67"
        "[event][id]" => "%{[log][id][uids]}"
        "[source][port]" => "68"
      }
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-mutate-f765482c0e5b-2023120101"
      }
      tag_on_failure => "_mutate_error-f765482c0e5b"
      id => "filter-mutate-f765482c0e5b"
    }

    # Event duration
    if [event][duration] {
      ruby {
        code => '
          event_duration = event.get("[event][duration]")
          duration = event_duration.to_f * 1000000000
          event.set("[event][duration]", duration)
        '
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-ruby-0c38a2a2e843-2023120101"
        }
        tag_on_exception => "_rubyexception-0c38a2a2e843-event.duration_to_nanoseconds-2023120101"
        tag_with_exception_message => true
        id => "filter-ruby-0c38a2a2e843"
      }
    }

  }
}
