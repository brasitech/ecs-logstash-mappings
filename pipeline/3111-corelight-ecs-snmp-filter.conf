# Corelight ECS Logstash Pipeline
# Git Repository: https://github.com/corelight/ecs-logstash-mappings
# Authors: Corelight Inc, Brasi Tech LLC
# License: BSD 3-Clause
# Support: https://github.com/corelight/ecs-logstash-mappings/issues/new
# Releases: https://github.com/corelight/ecs-logstash-mappings/releases

filter {
  if [@metadata][z_no_reuse][event_type] == "corelight" and [labels][corelight][event_sub_type] == "snmp" {

    mutate {
      update => {
        "[event][kind]" => "event"
        "[event][category]" => "network"
        "[event][type]" => [ "connection", "info", "protocol" ]
        "[labels][corelight][event_category]" => "network_protocols"
        "[@metadata][temporary_metadata_index_name_type]" => "VAR_CL_DS_TYPE_PROTOCOL_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_prefix]" => "VAR_CL_DS_PREFIX_PROTOCOL_LOG"
        "[@metadata][temporary_metadata_index_name_dataset_suffix]" => "VAR_CL_DS_SUFFIX_PROTOCOL_LOG_VARIOUS"
        "[@metadata][temporary_metadata_index_name_namespace]" => "VAR_CL_DS_NAMESPACE_PROTOCOL_LOG"
      }
      rename => {
        "community" => "[snmp][community]"
        "display_string" => "[snmp][display_string]"
        "duration" => "[snmp][duration]"
        "get_bulk_requests" => "[snmp][get_bulk_requests]"
        "get_requests" => "[snmp][get_requests]"
        "get_responses" => "[snmp][get_responses]"
        "set_requests" => "[snmp][set_requests]"
        "up_since" => "[snmp][up_since]"
        "version" => "[snmp][version]"
      }
      copy => {
        "[snmp][display_string]" => "[destination][software][original]"
        "[snmp][duration]" => "[event][duration]"
      }
      add_field => {
        "[@metadata][etl][pipeline]" => "filter-mutate-ad1caa2278ef-2023120101"
      }
      tag_on_failure => "_mutate_error-ad1caa2278ef"
      id => "filter-mutate-ad1caa2278ef"
    }

    # Event duration
    if [event][duration] {
      ruby {
        code => '
          event_duration = event.get("[event][duration]")
          duration = event_duration.to_f * 1000000000
          event.set("[event][duration]", duration)
        '
        add_field => {
          "[@metadata][etl][pipeline]" => "filter-ruby-48b8a536b5ae-2023120101"
        }
        tag_on_exception => "_rubyexception-48b8a536b5ae-event.duration_to_nanoseconds-2023120101"
        tag_with_exception_message => true
        id => "filter-ruby-48b8a536b5ae"
      }
    }

  }
}
